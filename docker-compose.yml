networks:
  dev:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf:ro'
    depends_on:
      - backend
      - frontend
    networks:
      - dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      retries: 5

  postgres:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - dev
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "fastapi_user"]
      interval: 10s
      retries: 5

  backend:
    build:
      context: ./backend
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend
    networks:
      - dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      retries: 5

volumes:
  pgdata:
