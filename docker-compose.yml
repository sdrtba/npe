networks:
  public:
  internal:
    internal: true

volumes:
  pg_data:

services:
  nginx:
    image: nginx:1.27-alpine
    networks: [public]
    depends_on:
      backend: { condition: service_healthy }
      frontend: { condition: service_healthy }
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost/healthz || exit 1"]
      interval: 10s
      retries: 5

  db:
    image: postgres:16-alpine
    networks: [internal]
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    networks: [internal]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 10

  backend:
    build:
      context: ./backend
    networks: [internal, public]
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_started }
    env_file:
      - ./.env
    command: ["uv", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/api/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    networks: [public]
    depends_on:
      backend: { condition: service_started }
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 15
